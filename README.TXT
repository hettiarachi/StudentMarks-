------------------------------------------------------------------------
This is the project README file. Here, you should describe your project.
Tell the reader (someone who does not know anything about this project)
all they need to know. The comments should usually include at least:
------------------------------------------------------------------------

PROJECT TITLE:
Student Marks Statistics

PURPOSE OF PROJECT:
The purpose of this project is to develop a Java program that computes various statistical measures for student marks. This includes calculating the minimum, maximum, mean, and standard deviation of marks for a given assignment. The program ensures robust input validation, handles errors gracefully, and follows best coding practices to produce a reliable and user-friendly application. This project demonstrates fundamental programming skills, algorithmic thinking, and the ability to solve practical computational problems.

VERSION or DATE:
Version 1.0 - July 15, 2024

HOW TO START THIS PROJECT:
1. **Clone the Repository:**
   - Clone the project repository from GitHub using the following command:
     ```sh
     git clone <repository-url>
     ```

2. **Open in BlueJ:**
   - Open the cloned project folder in BlueJ.

3. **Compile the Code:**
   - Compile the `StudentMarksStatistics` class to check for any errors.

4. **Run the Program:**
   - Run the `main` method in the `StudentMarksStatistics` class.

5. **Follow Prompts:**
   - Enter the assignment name and marks for 30 students as prompted by the program.

AUTHORS:
Ranga
Email: rangahettiarachchi1998@gmail.com

USER INSTRUCTIONS:
1. **Input Assignment Name:**
   - When prompted, enter the name of the assignment. This can be any non-empty string.

2. **Input Student Marks:**
   - Enter the marks for 30 students when prompted. Each mark must be a number between 0 and 30. If an invalid mark is entered, the program will display an error message and prompt for the mark again.

3. **View Statistics:**
   - After entering all the marks, the program will display the assignment name, the list of student marks, and the computed statistics: highest mark, lowest mark, mean, and standard deviation.

4. **Error Handling:**
   - The program ensures that only valid inputs are accepted. If an invalid input is detected, an informative error message is shown, and the user is prompted to re-enter the data.

5. **Review Code:**
   - The source code is well-documented with comments explaining the logic and flow. Users can review the code to understand how the computations are performed.

6. **Modify and Extend:**
   - Users are encouraged to modify and extend the program to suit their needs. The code follows best practices, making it easy to understand and enhance.

This project aims to provide a practical example of basic programming concepts and algorithmic thinking, making it a valuable resource for learners and educators in the field of computer science.
